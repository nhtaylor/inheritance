---
title: "GR5063 Assignment 4: Twitter & The Senate"
author: "Nathan Taylor"
date: "Thursday, April 12, 2018"
output: 
  html_document:
    keep_md: true
    toc: true
    toc_float: true
    highlight: tango
---

```{r Setup, include = FALSE, results = 'hide', warning = FALSE}
library(knitr)
opts_chunk$set(fig.path = "images/",
               cache.path = "cache/",
               cache = FALSE,
               echo = TRUE,
               message = FALSE,
               warning = FALSE)
```

```{r, echo = FALSE}
## establish working directory & upload data
setwd("~/Documents/GitHub/DV_CU_course_material/Exercises/10_twitter_senate")
library(rtweet)
library(twitteR)
library(lubridate)
library(readr)
# Read in the Senator Data
senate <- read_csv("senators_twitter.csv")
tweets <- readRDS("senator_tweets.RDS")
follow <- read_csv("senators_follow.csv")

library(tidyverse)
tweets %>% 
  group_by(screen_name) %>% 
  summarize(n_tweet = n(),
            oldest_tweet = min(created_at)) %>%
  arrange(desc(oldest_tweet))
```

# 1. Identifying Successful Projects

## Part A - Network of Followers

```{r, echo = FALSE}
## when we network, we network hard
follow$source <- tolower(follow$source)
follow$target <- tolower(follow$target)
sen <- data.frame(senate$`Official Twitter`, senate$`Party affiliation`)
colnames(sen) <- c("official", "party")
sen$official <- tolower(sen$official)
levels(sen$party)[levels(sen$party) == "Democratic Party"] <- "Democrat"
levels(sen$party)[levels(sen$party) == "Republican Party"] <- "Republican"
dim(follow)
follow <- follow[!(follow$following == FALSE & follow$followed_by == FALSE), ]
dim(follow)
drops <- c("following","followed_by")
foll <- follow[, !(names(follow) %in% drops)]
f <- merge(foll, sen, by.x = "source", by.y = "official")

## visualizing networks
library(network)
f1 <- network(foll, directed = TRUE)
nfoll <- as.matrix(foll)
library(igraph)
set.seed(10)
f2 <- graph_from_edgelist(nfoll, directed = T) 
plot(f2)
plot(f2, edge.arrow.size = .2, edge.curved = .1, asp = 0.75)
indegree <- igraph::degree(f2, mode = "in")
outdegree <- igraph::degree(f2, mode = "out")
```

When I examine the in-degrees from `igraph`, the Senators with the highest number of in-degree connections were Jeff Merkley with 97 connections and John Kennedy, Ed Markey, and Mark Warner with 96 connections each. These senators had the greatest number of fellow Senators following them on Twitter. Conversely, these same four Senators had the highest out degree connections with 96 for Mr. Merkley and 95 for the subsequent triad.

```{r, echo = FALSE}
layout_with_gem(f2, coords = NULL, maxiter = 40 * vcount(graph)^2,
  temp.max = vcount(graph), temp.min = 1/10,
  temp.init = sqrt(vcount(graph)))

```

The three senators with the lowest number of connections, or out degrees, were 

## Part B - Communities

```{r, echo = FALSE}


```


# 2. What are they tweeting about?

## Part A - Most Common Topics over Time

```{r, echo = FALSE}
tweet <- tweets[!(tweets$is_retweet == TRUE), ]
tweet$screen_name <- tolower(tweet$screen_name)
tweet <- merge(tweet, sen, by.x = "screen_name", by.y = "official")
library(tidytext)
ht <- tweet %>%
  unnest(hashtags) %>%
  filter(is.na(hashtags) == FALSE)
ht$hashtags <- tolower(ht$hashtags)

ht_count <- ht %>% 
  group_by(hashtags) %>% 
  count() %>%
  ungroup() %>%
  arrange(desc(n))
ht_count <- head(ht_count, n = 10)
ht_count$hashtags <- paste0("#", ht_count$hashtags)

library(RColorBrewer)
library(ggthemes)
ggplot(ht_count, aes(x = reorder(hashtags, n), y = n)) + 
  geom_bar(stat = "identity", aes(fill = n)) +
  coord_flip() +
  labs(title = "United States Senators & Hashtag Frequency") + 
  theme_tufte() +
  scale_y_continuous(breaks = c(500, 1000, 1500, 2000, 2500),
        labels = c("500", "1000", "1500", "2000", "2500")) + 
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.ticks = element_blank(),
        panel.grid.major.x = element_line(colour = "grey", size = rel(.5)),
        axis.text = element_text(colour = "black"))
```

## Part B - Democrats vs. Republicans 

I decided to subset the dataset to include all current sitting Senators. Doug Jones of Alabama was the most recently elected Senator, so I will use the day of his first tweet, January 1, 2018, as the beginning of my time period for study. 

```{r, echo = FALSE}
time <- ht %>%
  filter(created_at >= "2018-01-08 00:00:00")

## political parties
dem <- time %>%
  filter(party == "Democrat") %>%
  group_by(party, hashtags) %>%
  tally() %>%
  arrange(desc(n))
rep <- time %>%
  filter(party == "Republican") %>%
  group_by(party, hashtags) %>%
  tally() %>%
  arrange(desc(n))
pol <- rbind(dem, rep)
pol <- arrange(pol, desc(n))
pol$color <- ifelse(pol$party == "Democrat", "#045a8d", "#993404")
poli <- data.frame(pol$hashtags, pol$n, pol$color)
colnames(poli) <- c("word", "count", "color")
poli <- poli %>%
  arrange(desc(count))
library(wordcloud2)
wordcloud2(data = poli, size = .85, color = poli$color)
```

## Part C - Gun Control I - Dems vs. Reps

In my attempt to examine how Senators from different political parties engage the issue of gun violence, I have selected ten commonly used hashtags related to the topic to see the frequency of their use in Twitter discourse. Given that my subseted number of tweets, I had to use hashtags that were primarily associated with the Parkland school shootings to gauge Senators' take on the second ammendment.

```{r, echo = FALSE}
## all about them carat-ers
colnames(pol) <- c("Party", "word", "count", "color")
keeps <- c("neveragain","nationalwalkoutday", "enoughisenough",
           "gunviolence", "parklandshooting", "assaultweaponsban",
           "gunsafety", "marchforourlives")
k1 <- pol[pol$word %in% keeps, ]
k1$word <- paste0("#", k1$word)
ggplot(k1, aes(x = reorder(word, count), y = count)) +
  geom_bar(aes(fill = Party), stat = "identity", position = "dodge") + 
  coord_flip() +
  labs(title =  "Senatorial Twitter Responses to Parkland School Shooting",
       subtitle = "Hashtags used by both parties") +
  theme_tufte() +
  theme(axis.ticks = element_blank(),
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text = element_text(colour = "black"),
        panel.grid.major.x = element_line(colour = "grey", size = rel(1)),
        panel.background = element_blank()) +
  scale_fill_manual(values = c("#084081", "#a50f15"))  

## graf 2
keep <- c("stopschoolviolenceact", "timetowakeup", "gunreform",
           "endgunviolence", "gunreformnow", "guncontrol", 
           "nationalschoolwalkout", "stopschoolviolence")
k2 <- pol[pol$word %in% keep, ]
k2$word <- paste0("#", k2$word)
ggplot(k2, aes(x = reorder(word, count), y = count)) +
  geom_bar(aes(fill = Party), stat = "identity", position = "dodge") + 
  coord_flip() +
  labs(title =  "Senatorial Twitter Responses to Parkland School Shooting",
       subtitle = "Hashtags used by a single party exclusively") +
  theme_tufte() +
  theme(axis.ticks = element_blank(),
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text = element_text(colour = "black"),
        panel.grid.major.x = element_line(colour = "grey", size = rel(1)),
        panel.background = element_blank()) +
  scale_fill_manual(values = c("#084081", "#a50f15")) 
```

The language both parties use to discuss issues around the second amendment varies greatly. Republicans appear to frame it as a matter of school violence, whereas Democrats push for greater in gun control efforts. What's also interesting is the relative difference in voice taken throughout the debate. Democrats appear to engage more directly while Republicans appears, by looking at their hashtags, to avoid a stringent defense of second amendments rights.

## Part D - Gun Control II - Parkland Shooting

```{r, echo = FALSE}
twee <- tweets[!(tweets$is_retweet == TRUE), ]
twee <- merge(twee, sen, by.x = "screen_name", by.y = "official")
t1 <- twee %>%
  filter(created_at >="2018-02-09 00:00:00" & 
           created_at < "2018-02-19 00:00:00") %>%
  unnest_tokens(word, text)
d1 <- t1 %>%
  filter(party == "Democrat")
r1 <- t1 %>%
  filter(party == "Republican")

## text cleaning
library(textclean)
library(tm)
CleanText <- function(text) {
  text <- replace_number(text)
  text <- replace_contraction(text)
  text <- replace_symbol(text)
  text <- removeNumbers(text)
  text <- removePunctuation(text)
  text <- stripWhitespace(text)
  text <- tolower(text)
}
d1$word <- CleanText(d1$word)
d1 <- anti_join(d1, stop_words, by = "word")
d1c <- d1 %>% 
  filter(!(word == ""))
r1$word <- CleanText(r1$word)
r1 <- anti_join(r1, stop_words, by = "word")
r1c <- r1 %>% 
  filter(!(word == ""))
##########################  s.replaceAll("'s|</NOUN>", "");

## word stemming
d2c <- d1c
r2c <- r1c
d2c$word <- stemDocument(d2c$word)
r2c$word <- stemDocument(r2c$word)

## stem completion
stemCompletion2 <- function(x, dictionary) {
   x <- unlist(strsplit(as.character(x), " "))
    # # Oddly, stemCompletion completes an empty string to
	  # a word in dictionary. Remove empty string to avoid issue.
   x <- x[x != ""]
   x <- stemCompletion(x, dictionary=dictionary)
   x <- paste(x, sep="", collapse=" ")
   PlainTextDocument(stripWhitespace(x))
}
library(parallel)
library(pbapply)
# Calculate the number of cores
no_cores <- detectCores() - 1
# Initiate cluster
start.time <- Sys.time()
d3c <- mclapply(d2c,
                stemCompletion2,
                dictionary = d1c, 
                mc.cores = no_cores)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken 
r3c <- mclapply(r2c,
                stemCompletion2,
                dictionary = r1c, 
                mc.cores = no_cores)


## getting sentiments
d2c <- d2c %>%
  right_join(get_sentiments("nrc")) %>%
  na.omit(d2c) %>%
  arrange(sentiment)
r2c <- r2c %>%
  right_join(get_sentiments("nrc")) %>%
  na.omit(r2c) %>%
  arrange(sentiment)
simpleCap <- function(x) {
  s <- strsplit(x, " ")[[1]]
  paste(toupper(substring(s, 1, 1)), substring(s, 2),
      sep = "", collapse = " ")
}
d2c$sentiment <- sapply(d2c$sentiment, simpleCap)
r2c$sentiment <- sapply(r2c$sentiment, simpleCap)
```

# 3. Are you talking to me?

## Part A - Identifying Re-tweets

```{r, echo = FALSE}


```

## Part B - Identifying Mentions

```{r, echo = FALSE}


```



````{r}

### Bits & Pieces
filter(




ggplot(pol, aes(x = reorder(hashtags, n), y = n, fill = party)) +
  geom_bar(data = filter(pol, party == "Republican"), aes(y = n*(-1)),stat = "identity") +  
  geom_bar(data = filter(pol, party == "Democrat"), stat = "identity") + 
  scale_fill_brewer(palette = "Set1", direction = -1) + coord_flip() +
  ylab("") +
  theme_fivethirtyeight()

ggplot(data = pol, aes(x = reorder(hashtags, n), fill = party)) + 
  geom_bar(data = filter(pol, party == "Republican"), aes(y = n*(-1)), stat = "identity") + 
  geom_bar(data = filter(pol, party == "Democrat"), aes(y = n), stat = "identity") + 
  coord_flip()
  scale_y_continuous(breaks = seq(-40,40,10),labels = abs(seq(-40,40,10)))
